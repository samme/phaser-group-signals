// Generated by CoffeeScript 1.10.0
(function() {
  "use strict";
  var Group, LifeSpan, Phaser, Signal, _add, _kill, _remove, _revive, i, len, obj, ref;

  Phaser = this.Phaser;

  Group = Phaser.Group, Signal = Phaser.Signal;

  LifeSpan = Phaser.Component.LifeSpan;

  _add = Group.prototype.add;

  Group.prototype.add = function(child, silent, index) {
    var result;
    if (this === child.parent) {
      return child;
    }
    result = _add.call(this, child, silent, index);
    if (this._onChildAdded && !silent) {
      this.onChildAdded.dispatch(child, this);
    }
    return result;
  };

  _remove = Group.prototype.remove;

  Group.prototype.remove = function(child, destroy, silent) {
    var result;
    result = _remove.call(this, child, destroy, silent);
    if (this._onChildRemoved && !silent && result) {
      this.onChildRemoved.dispatch(child, this);
    }
    return result;
  };

  _revive = LifeSpan.prototype.revive;

  LifeSpan.prototype.revive = function(health) {
    var ref;
    _revive.call(this, health);
    if ((ref = this.parent) != null ? ref._onChildRevived : void 0) {
      this.parent.onChildRevived.dispatch(this, this.parent);
    }
    return this;
  };

  _kill = LifeSpan.prototype.kill;

  LifeSpan.prototype.kill = function() {
    var ref;
    _kill.call(this);
    if ((ref = this.parent) != null ? ref._onChildKilled : void 0) {
      this.parent.onChildKilled.dispatch(this, this.parent);
    }
    return this;
  };

  ref = [Phaser.BitmapText, Phaser.Creature, Phaser.Graphics, Phaser.Image, Phaser.Rope, Phaser.Sprite, Phaser.Text, Phaser.TileSprite];
  for (i = 0, len = ref.length; i < len; i++) {
    obj = ref[i];
    if (!(obj && obj.prototype.components.LifeSpan)) {
      continue;
    }
    obj.prototype.kill = LifeSpan.prototype.kill;
    obj.prototype.revive = LifeSpan.prototype.revive;
  }

  Object.defineProperty(Group.prototype, "onChildAdded", {
    get: function() {
      return this._onChildAdded || (this._onChildAdded = new Signal);
    }
  });

  Object.defineProperty(Group.prototype, "onChildRemoved", {
    get: function() {
      return this._onChildRemoved || (this._onChildRemoved = new Signal);
    }
  });

  Object.defineProperty(Group.prototype, "onChildKilled", {
    get: function() {
      return this._onChildKilled || (this._onChildKilled = new Signal);
    }
  });

  Object.defineProperty(Group.prototype, "onChildRevived", {
    get: function() {
      return this._onChildRevived || (this._onChildRevived = new Signal);
    }
  });

}).call(this);
